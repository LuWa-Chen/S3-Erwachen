存档功能的实现--by某位被clq疯狂压榨的鼠鼠程序

不需要Stop的存档功能

对于一个游戏来说，存档是很重要的功能，达芬奇编辑器并没有内置比较便利的相关函数，
达芬奇编辑器更新之后API中的datasheet目前并不适用与现在的编辑器版本，而编辑器内部的值都是会随着停止测试而恢复初值
所以需要使用另一种存储方式来储存

我首先想到的是使用外置的CSV文件，因为lua语言写处理CSV文件的代码比较便利，
通过CSDN等网站的搜索，我发现大佬们用的lua语言编译器是Cocos2dx，该编译器内置了读取CSV文件的包
所以排除CSV文件，我想到了一个最简单文件来存储——txt文件

txt文件只能保存字符串，但实际上已经足够，
即我们只需要吧所有数据都丢到字符串里面，不同的数据用分隔符（比如“,”）分割开就好了
这样存储的好处是无论什么样的数据结构，你只需要把他转换成字符串就能存储
比如我需要存储一个Vector3(1,2,3)，那么我只需要将这个数据转换成“1,2,3”，这样是最简单的存储方式
为了避免遗忘，你同样可以在这段字符串前面加入一个标记，用来表明后面的数据为这个Vector的内容（"V3，1，2，3"）
这样的话我们数据存储的方法会比较简单，也很容易上手

但这样存储同样也会有一定的缺点
如果我每个数据前面都要加一个标记，那么我的if可能会很多，读档的效率很差
如果我为了速度而不加标记，那么我就要严格按照一定的顺序来存档和读档，否则会出现读档赋值错误
同时，lua语言支持将纯数字字符串与int或者float直接互相转换，但不能将bool等其他数据类型直接写入txt，也不能读取
所以存储这些数据类型时，必须要进行判断，将这些数据转换成能够储存进txt的数据

由于我们本次的游戏只需要存储int、float和bool，所以我们使用这个方法存储并不会有太大困难
这同时也印证了一点，代码复杂度与数据复杂度是相互制约的，很难做到两种方式同时优化，想要代码写的方便点，也得多花时间去思考数据如何存储

ps：该方式存储的文件直接使用文件名即可，存储的文件会整合到.smap里面，我们是看不到的，但他确实存在
（或许可以利用这一点来膨胀游戏体积？